package com.test.todoTest;


import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.BDDMockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;

import com.fasterxml.jackson.annotation.JsonFormat;

import springboot.starter.CourseAPI;
import springboot.starter.controller.Todo;
import springboot.starter.service.TodoService;


import static org.hamcrest.Matchers.*;


import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

@RunWith(SpringRunner.class)
@SpringBootTest(classes = CourseAPI.class,webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
@AutoConfigureMockMvc
public class ControllerTest {

	@Autowired
	private MockMvc moc;
	
	@MockBean
	private TodoService todoser;
	
	
	@Test
	public void testGetAllTodo() throws Exception{
		
		moc.perform(get("/api/v1/todo/")).andExpect(status().isOk());
	}
	
	@Test
	public void whenGetAllTodo_ThenWillReturnJson() throws Exception{
		
		Todo todo1 = new Todo("1", "todo test1", "test 1");
		Todo todo2 = new Todo("2", "todo test2", "test 2");

		List<Todo> list = Arrays.asList(todo1,todo2);
		
		BDDMockito.given(todoser.findAll()).willReturn(list);
		moc.perform(get("/api/v1/todo/").contentType(MediaType.APPLICATION_JSON))
		.andExpect(status().isOk()).andExpect(jsonPath("$", hasSize(2)));
		
		
	}
}
